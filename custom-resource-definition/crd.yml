# database-crd.yaml
apiVersion: apiextensions.k8s.io/v1 # This is the API for defining CRDs
kind: CustomResourceDefinition
metadata:
  name: databases.stable.example.com # Plural name + group
spec:
  group: stable.example.com # Your API group
  versions:
    - name: v1 # Version of your custom resource API
      served: true
      storage: true # This is the primary storage version
      schema:
        openAPIV3Schema:
          type: object
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec: # This is the definition of your custom resource's 'spec'
              type: object
              properties:
                engine:
                  type: string
                  description: "The database engine (e.g., postgres, mysql)"
                  enum: ["postgres", "mysql"] # Allowed values
                version:
                  type: string
                  description: "The database engine version"
                size:
                  type: string
                  description: "The size of the database instance (e.g., small, medium, large)"
                  enum: ["small", "medium", "large"]
                storageGB:
                  type: integer
                  minimum: 1
                  maximum: 1000
                  description: "Storage allocated in GB"
                users: # Array of users
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: "Username for the database"
                      passwordSecretRef: # Reference to a Kubernetes Secret
                        type: object
                        properties:
                          name: { type: string }
                          key: { type: string }
                        required: ["name", "key"]
              required: ["engine", "version", "size", "storageGB"] # Fields that must be provided
            status: # This is where the controller would update the status of the database
              type: object
              properties:
                phase:
                  type: string
                  description: "Current phase of the database (e.g., Provisioning, Ready, Error)"
                connectionString:
                  type: string
                  description: "Connection string for the database"
                creationTime:
                  type: string
                  format: date-time
  scope: Namespaced # Custom resources will be created in specific namespaces
  names:
    plural: databases # Used in kubectl commands like `kubectl get databases`
    singular: database # Used for single resource names
    kind: Database # The 'kind' in your YAML definition
    shortNames: ["db"] # Optional short name